{
  "name": "medusa-products-pricing-groups",
  "version": "1.0.0",
  "description": "Create pricing groups to enable volume price breaks across multiple products.",
  "author": "Sasha Hilton",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/sashahilton00/medusa-products-pricing-groups.git"
  },
  "keywords": [
    "sqlite",
    "postgres",
    "typescript",
    "ecommerce",
    "headless",
    "medusa",
    "medusa-plugin",
    "medusa-plugin-admin",
    "medusa-plugin-products",
    "medusa-plugin-other"
  ],
  "scripts": {
    "clean": "cross-env ./node_modules/.bin/rimraf dist",
    "build": "cross-env npm run build:server && npm run build:admin",
    "build:server": "cross-env npm run clean && tsc -p tsconfig.json",
    "build:admin": "cross-env medusa-admin bundle",
    "prepare": "cross-env NODE_ENV=production npm run build"
  },
  "peerDependencies": {
    "@medusajs/medusa": "^1.20.6"
  },
  "dependencies": {
    "@medusajs/admin": "^7.1.14",
    "@medusajs/ui": "3.0.0",
    "body-parser": "^1.19.0",
    "cmdk": "^1.0.0",
    "cors": "^2.8.5",
    "dotenv": "16.4.5",
    "express": "^4.17.2",
    "medusa-interfaces": "latest",
    "medusa-react": "9.0.17",
    "prism-react-renderer": "^2.0.4",
    "typeorm": "^0.3.16"
  },
  "devDependencies": {
    "@babel/cli": "^7.14.3",
    "@babel/core": "^7.14.3",
    "@babel/preset-typescript": "^7.21.4",
    "@medusajs/medusa-cli": "latest",
    "@stdlib/number-float64-base-normalize": "0.0.8",
    "@types/express": "^4.17.13",
    "@types/jest": "^27.4.0",
    "@types/mime": "1.3.5",
    "@types/node": "^17.0.8",
    "babel-preset-medusa-package": "^1.1.19",
    "cross-env": "^7.0.3",
    "eslint": "^6.8.0",
    "jest": "^27.3.1",
    "rimraf": "^3.0.2",
    "ts-jest": "^27.0.7",
    "ts-loader": "^9.2.6",
    "typescript": "^4.5.2"
  },
  "jest": {
    "globals": {
      "ts-jest": {
        "tsconfig": "tsconfig.spec.json"
      }
    },
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/",
      "<rootDir>/node_modules/"
    ],
    "rootDir": "src",
    "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|js)$",
    "transform": {
      ".ts": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node"
  }
}
